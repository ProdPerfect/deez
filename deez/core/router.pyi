# Stubs for deez.router (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
from logging import Logger
from typing import Any, Callable, Dict, List, Match, Optional, Pattern, Tuple, Type

from deez.conf import Setting
from deez.middleware import Middleware
from deez.resource import Resource


class Router:
    _logger: Logger = ...
    _routes: Dict[str, Type[Resource]] = ...
    _route_patterns: List[Pattern] = ...
    _settings: Setting = ...
    _middleware: List[Type[Middleware]] = ...
    _middleware_reversed: List[Type[Middleware]] = ...
    _exception_handler: Callable = ...

    def __init__(self, *,
                 routes: Dict[str, Type[Resource]],
                 route_patterns: List[Pattern],
                 settings: Setting,
                 middleware: List[Type[Middleware]],
                 middleware_reversed: List[Type[Middleware]],
                 exception_handler: Callable) -> None: ...
    def route(self, event: Dict[str, Any], context: Dict[str, Any]): ...
    def execute(self, event: Dict[str, Any], context: Dict[str, Any]) -> Tuple[Optional[str], int, Dict[str, Any], str]: ...
    def _get_re_match(self, path: str, method: str) -> Optional[Match]: ...
    def _make_response(self,status_code: int, data: str, content_type: str = ..., extra_headers: Dict[str, Any]=...) -> Dict[str, Any]: ...
